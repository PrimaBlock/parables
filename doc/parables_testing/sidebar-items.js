initSidebarItems({"macro":[["contracts",""],["prop_assert","Similar to `assert!` from std, but returns a test failure instead of panicking if the condition fails."],["prop_assert_eq","Similar to `assert_eq!` from std, but returns a test failure instead of panicking if the condition fails."],["prop_assert_ne","Similar to `assert_ne!` from std, but returns a test failure instead of panicking if the condition fails."],["prop_assume","Rejects the test input if assumptions are not met."],["prop_compose","Convenience to define functions which produce new strategies."],["prop_oneof","Produce a strategy which picks one of the listed choices."],["proptest","Easily define `proptest` tests."],["pt","Helper macro for proptest! to build a closure suitable for passing in to `TestRunner::run`."]],"mod":[["error",""],["evm",""],["linker",""],["prelude",""],["reporter",""],["snapshot",""],["test_runner","Provides a simple test scaffolding for running tests in parallel."],["wei",""]]});