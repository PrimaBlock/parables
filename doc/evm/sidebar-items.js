initSidebarItems({"enum":[["CallType","The type of the call-like instruction."],["CleanDustMode","Dust accounts cleanup mode."],["ContractCreateResult","Result of externalities create function."],["CreateContractAddress","Specifies how an address is calculated for a new contract."],["GasLeft","Gas Left: either it is a known value, or it needs to be computed by processing a return instruction."],["MessageCallResult","Result of externalities call function."],["VMType","Type of EVM to use."]],"fn":[["push_bytes","Returns number of bytes to read for `PUSHN` instruction or 0."]],"macro":[["evm_test","Create tests by injecting different VM factories"],["evm_test_ignore","Create ignored tests by injecting different VM factories"]],"mod":[["evm","Evm interface."],["factory","Evm factory."],["interpreter","Rust VM implementation"]],"struct":[["ActionParams","Action (call/create) input params. Everything else should be specified in Externalities."],["EnvInfo","Information concerning the execution environment for a message-call/contract-creation."],["INSTRUCTIONS","Static instruction table."],["InstructionInfo","EVM instruction information."],["ReturnData","Return data buffer. Holds memory from a previous call and a slice into that memory."],["Schedule","Definition of the cost schedule and other parameterisations for the EVM."]],"trait":[["Ext","Externalities interface for EVMs"]]});